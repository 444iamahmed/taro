import{Line3,Plane,Triangle,Vector3}from"../lib/three.js";var ConvexHull=function(){function a(){this.tolerance=-1,this.faces=[],this.newFaces=[],this.assigned=new g,this.unassigned=new g,this.vertices=[]}function d(){this.normal=new Vector3,this.midpoint=new Vector3,this.area=0,this.constant=0,this.outside=null,this.mark=0,this.edge=null}function e(a,b){this.vertex=a,this.prev=null,this.next=null,this.twin=null,this.face=b}function f(a){this.point=a,this.prev=null,this.next=null,this.face=null}function g(){this.head=null,this.tail=null}var h=new Vector3;return Object.assign(a.prototype,{setFromPoints:function(a){!0!==Array.isArray(a)&&console.error("THREE.ConvexHull: Points parameter is not an array."),4>a.length&&console.error("THREE.ConvexHull: The algorithm needs at least four points."),this.makeEmpty();for(var b=0,c=a.length;b<c;b++)this.vertices.push(new f(a[b]));return this.compute(),this},setFromObject:function(a){var b=[];return a.updateMatrixWorld(!0),a.traverse(function(a){var c,d,e,f=a.geometry;if(void 0!==f)if(f.isGeometry){var g=f.vertices;for(c=0,d=g.length;c<d;c++)e=g[c].clone(),e.applyMatrix4(a.matrixWorld),b.push(e)}else if(f.isBufferGeometry){var h=f.attributes.position;if(void 0!==h)for(c=0,d=h.count;c<d;c++)e=new Vector3,e.fromBufferAttribute(h,c).applyMatrix4(a.matrixWorld),b.push(e)}}),this.setFromPoints(b)},containsPoint:function(a){for(var b,c=this.faces,d=0,e=c.length;d<e;d++)if(b=c[d],b.distanceToPoint(a)>this.tolerance)return!1;return!0},intersectRay:function(a,b){for(var c=this.faces,d=-Infinity,e=1/0,f=0,g=c.length;f<g;f++){var h=c[f],j=h.distanceToPoint(a.origin),k=h.normal.dot(a.direction);if(0<j&&0<=k)return null;var l=0===k?0:-j/k;if(!(0>=l)&&(0<k?e=Math.min(l,e):d=Math.max(l,d),d>e))return null}return d===-Infinity?a.at(e,b):a.at(d,b),b},intersectsRay:function(a){return null!==this.intersectRay(a,h)},makeEmpty:function(){return this.faces=[],this.vertices=[],this},addVertexToFace:function(a,b){return a.face=b,null===b.outside?this.assigned.append(a):this.assigned.insertBefore(b.outside,a),b.outside=a,this},removeVertexFromFace:function(a,b){return a===b.outside&&(null!==a.next&&a.next.face===b?b.outside=a.next:b.outside=null),this.assigned.remove(a),this},removeAllVerticesFromFace:function(a){if(null!==a.outside){for(var b=a.outside,c=a.outside;null!==c.next&&c.next.face===a;)c=c.next;return this.assigned.removeSubList(b,c),b.prev=c.next=null,a.outside=null,b}},deleteFaceVertices:function(a,b){var c=this.removeAllVerticesFromFace(a);if(void 0!==c)if(void 0===b)this.unassigned.appendChain(c);else{var d=c;do{var e=d.next,f=b.distanceToPoint(d.point);f>this.tolerance?this.addVertexToFace(d,b):this.unassigned.append(d),d=e}while(null!==d)}return this},resolveUnassignedPoints:function(a){if(!1===this.unassigned.isEmpty()){var b=this.unassigned.first();do{for(var c,d=b.next,e=this.tolerance,f=null,g=0;g<a.length;g++)if(c=a[g],0===c.mark){var h=c.distanceToPoint(b.point);if(h>e&&(e=h,f=c),e>1e3*this.tolerance)break}null!==f&&this.addVertexToFace(b,f),b=d}while(null!==b)}return this},computeExtremes:function(){var a,b,c,d=new Vector3,e=new Vector3,f=[],g=[];for(a=0;3>a;a++)f[a]=g[a]=this.vertices[0];for(d.copy(this.vertices[0].point),e.copy(this.vertices[0].point),(a=0,b=this.vertices.length);a<b;a++){var h=this.vertices[a],k=h.point;for(c=0;3>c;c++)k.getComponent(c)<d.getComponent(c)&&(d.setComponent(c,k.getComponent(c)),f[c]=h);for(c=0;3>c;c++)k.getComponent(c)>e.getComponent(c)&&(e.setComponent(c,k.getComponent(c)),g[c]=h)}return this.tolerance=3*Number.EPSILON*(Math.max(Math.abs(d.x),Math.abs(e.x))+Math.max(Math.abs(d.y),Math.abs(e.y))+Math.max(Math.abs(d.z),Math.abs(e.z))),{min:f,max:g}},computeInitialHull:function(){var a,b,c;return function(){void 0===a&&(a=new Line3,b=new Plane,c=new Vector3);var e,f,g,h,k,m,n,o,p,q=this.vertices,r=this.computeExtremes(),s=r.min,t=r.max,u=0,v=0;for(m=0;3>m;m++)p=t[m].point.getComponent(m)-s[m].point.getComponent(m),p>u&&(u=p,v=m);for(f=s[v],g=t[v],u=0,a.set(f.point,g.point),(m=0,n=this.vertices.length);m<n;m++)e=q[m],e!==f&&e!==g&&(a.closestPointToPoint(e.point,!0,c),p=c.distanceToSquared(e.point),p>u&&(u=p,h=e));for(u=-1,b.setFromCoplanarPoints(f.point,g.point,h.point),(m=0,n=this.vertices.length);m<n;m++)e=q[m],e!==f&&e!==g&&e!==h&&(p=Math.abs(b.distanceToPoint(e.point)),p>u&&(u=p,k=e));var w=[];if(0>b.distanceToPoint(k.point))for(w.push(d.create(f,g,h),d.create(k,g,f),d.create(k,h,g),d.create(k,f,h)),m=0;3>m;m++)o=(m+1)%3,w[m+1].getEdge(2).setTwin(w[0].getEdge(o)),w[m+1].getEdge(1).setTwin(w[o+1].getEdge(0));else for(w.push(d.create(f,h,g),d.create(k,f,g),d.create(k,g,h),d.create(k,h,f)),m=0;3>m;m++)o=(m+1)%3,w[m+1].getEdge(2).setTwin(w[0].getEdge((3-m)%3)),w[m+1].getEdge(0).setTwin(w[o+1].getEdge(1));for(m=0;4>m;m++)this.faces.push(w[m]);for(m=0,n=q.length;m<n;m++)if(e=q[m],e!==f&&e!==g&&e!==h&&e!==k){u=this.tolerance;var x=null;for(o=0;4>o;o++)p=this.faces[o].distanceToPoint(e.point),p>u&&(u=p,x=this.faces[o]);null!==x&&this.addVertexToFace(e,x)}return this}}(),reindexFaces:function(){for(var a,b=[],c=0;c<this.faces.length;c++)a=this.faces[c],0===a.mark&&b.push(a);return this.faces=b,this},nextVertexToAdd:function(){if(!1===this.assigned.isEmpty()){var a,b=0,c=this.assigned.first().face,d=c.outside;do{var e=c.distanceToPoint(d.point);e>b&&(b=e,a=d),d=d.next}while(null!==d&&d.face===c);return a}},computeHorizon:function(a,b,c,d){this.deleteFaceVertices(c),c.mark=1;var e=null===b?b=c.getEdge(0):b.next;do{var f=e.twin,g=f.face;0===g.mark&&(g.distanceToPoint(a)>this.tolerance?this.computeHorizon(a,f,g,d):d.push(e)),e=e.next}while(e!==b);return this},addAdjoiningFace:function(a,b){var c=d.create(a,b.tail(),b.head());return this.faces.push(c),c.getEdge(-1).setTwin(b.twin),c.getEdge(0)},addNewFaces:function(a,b){this.newFaces=[];for(var c=null,d=null,e=0;e<b.length;e++){var f=b[e],g=this.addAdjoiningFace(a,f);null===c?c=g:g.next.setTwin(d),this.newFaces.push(g.face),d=g}return c.next.setTwin(d),this},addVertexToHull:function(a){var b=[];return this.unassigned.clear(),this.removeVertexFromFace(a,a.face),this.computeHorizon(a.point,null,a.face,b),this.addNewFaces(a,b),this.resolveUnassignedPoints(this.newFaces),this},cleanup:function(){return this.assigned.clear(),this.unassigned.clear(),this.newFaces=[],this},compute:function(){var a;for(this.computeInitialHull();void 0!==(a=this.nextVertexToAdd());)this.addVertexToHull(a);return this.reindexFaces(),this.cleanup(),this}}),Object.assign(d,{create:function(f,a,b){var c=new d,g=new e(f,c),h=new e(a,c),i=new e(b,c);return g.next=i.prev=h,h.next=g.prev=i,i.next=h.prev=g,c.edge=g,c.compute()}}),Object.assign(d.prototype,{getEdge:function(a){for(var b=this.edge;0<a;)b=b.next,a--;for(;0>a;)b=b.prev,a++;return b},compute:function(){var d;return function(){void 0===d&&(d=new Triangle);var e=this.edge.tail(),a=this.edge.head(),b=this.edge.next.head();return d.set(e.point,a.point,b.point),d.getNormal(this.normal),d.getMidpoint(this.midpoint),this.area=d.getArea(),this.constant=this.normal.dot(this.midpoint),this}}(),distanceToPoint:function(a){return this.normal.dot(a)-this.constant}}),Object.assign(e.prototype,{head:function(){return this.vertex},tail:function(){return this.prev?this.prev.vertex:null},length:function(){var a=this.head(),b=this.tail();return null===b?-1:b.point.distanceTo(a.point)},lengthSquared:function(){var a=this.head(),b=this.tail();return null===b?-1:b.point.distanceToSquared(a.point)},setTwin:function(a){return this.twin=a,a.twin=this,this}}),Object.assign(g.prototype,{first:function(){return this.head},last:function(){return this.tail},clear:function(){return this.head=this.tail=null,this},insertBefore:function(a,b){return b.prev=a.prev,b.next=a,null===b.prev?this.head=b:b.prev.next=b,a.prev=b,this},insertAfter:function(a,b){return b.prev=a,b.next=a.next,null===b.next?this.tail=b:b.next.prev=b,a.next=b,this},append:function(a){return null===this.head?this.head=a:this.tail.next=a,a.prev=this.tail,a.next=null,this.tail=a,this},appendChain:function(a){for(null===this.head?this.head=a:this.tail.next=a,a.prev=this.tail;null!==a.next;)a=a.next;return this.tail=a,this},remove:function(a){return null===a.prev?this.head=a.next:a.prev.next=a.next,null===a.next?this.tail=a.prev:a.next.prev=a.prev,this},removeSubList:function(c,a){return null===c.prev?this.head=a.next:c.prev.next=a.next,null===a.next?this.tail=c.prev:a.next.prev=c.prev,this},isEmpty:function(){return null===this.head}}),a}();export{ConvexHull};