function promisifyRequest(e){return new Promise((t,r)=>{e.oncomplete=e.onsuccess=(()=>t(e.result)),e.onabort=e.onerror=(()=>r(e.error))})}function createStore(e,t){const r=indexedDB.open(e);r.onupgradeneeded=(()=>r.result.createObjectStore(t));const n=promisifyRequest(r);return(e,r)=>n.then(n=>r(n.transaction(t,e).objectStore(t)))}let defaultGetStoreFunc;function defaultGetStore(){return defaultGetStoreFunc||(defaultGetStoreFunc=createStore("keyval-store","keyval")),defaultGetStoreFunc}function get(e,t=defaultGetStore()){return t("readonly",t=>promisifyRequest(t.get(e)))}function set(e,t,r=defaultGetStore()){return r("readwrite",r=>(r.put(t,e),promisifyRequest(r.transaction)))}function setMany(e,t=defaultGetStore()){return t("readwrite",t=>(e.forEach(e=>t.put(e[1],e[0])),promisifyRequest(t.transaction)))}function getMany(e,t=defaultGetStore()){return t("readonly",t=>Promise.all(e.map(e=>promisifyRequest(t.get(e)))))}function update(e,t,r=defaultGetStore()){return r("readwrite",r=>new Promise((n,o)=>{r.get(e).onsuccess=function(){try{r.put(t(this.result),e),n(promisifyRequest(r.transaction))}catch(e){o(e)}}}))}function del(e,t=defaultGetStore()){return t("readwrite",t=>(t.delete(e),promisifyRequest(t.transaction)))}function clear(e=defaultGetStore()){return e("readwrite",e=>(e.clear(),promisifyRequest(e.transaction)))}function eachCursor(e,t){return e("readonly",e=>(e.openCursor().onsuccess=function(){this.result&&(t(this.result),this.result.continue())},promisifyRequest(e.transaction)))}function keys(e=defaultGetStore()){const t=[];return eachCursor(e,e=>t.push(e.key)).then(()=>t)}function values(e=defaultGetStore()){const t=[];return eachCursor(e,e=>t.push(e.value)).then(()=>t)}function entries(e=defaultGetStore()){const t=[];return eachCursor(e,e=>t.push([e.key,e.value])).then(()=>t)}export{clear,createStore,del,entries,get,getMany,keys,promisifyRequest,set,setMany,update,values};